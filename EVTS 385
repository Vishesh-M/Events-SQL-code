-- EVTS 385


WITH DATA AS (
SELECT distinct
    CURRENT_DATE() AS EXTRACT_DATE
    ,CAST(COVER.BENEFIT_STATUS_CHANGE_DATE AS DATE) AS BENEFIT_STATUS_START_DATE  
    ,COVER.BANCS_BENEFIT_ID AS IBN_POL_BEN_ID   
    ,COVER.BENEFIT_STATUS_CD
    ,CAST(COVER.BENEFIT_STATUS_CHANGE_DATE AS DATE) AS BENEFIT_STATUS_CHANGE_DATE
    ,CASE WHEN  UPPER(POLICY.POLICY_OWNER) LIKE '%NULIS%' THEN 'YES' ELSE 'NO' END IS_NULIS 
    ,COVER.PREMIUM_FREQUENCY_CD AS COLLECTION_FREQUENCY 
    ,COVER.PREMIUM_STRUCTURE AS PREMIUM_STRUCTURE   
    ,POLICY.LEGACY_POLICY_NUMBER AS POLICY_NO
    ,POLICY.POLICY_STATUS_CD
    ,COVER.BENEFIT_CD AS BENEFIT_CODE   
    ,COVER.BENEFIT_INSTANCE_NUMBER AS BENEFIT_INS_NO    
    ,CAST(COVER.BENEFIT_COMMENCEMENT_DATE AS DATE) AS BENEFIT_COMMENCE_DATE   
    ,CAST(POLICY.POLICY_COMMENCEMENT_DATE AS DATE) AS POLICY_COMMENCEMENT_DATE
    -- NEXT_ANNIVERSARY 
    ,CASE WHEN   --DATE_PART(DD,POLICY.POLICY_COMMENCEMENT_DATE) < DATE_PART(DD,CURRENT_DATE()) 
                  DATE_PART(MM,POLICY.POLICY_COMMENCEMENT_DATE) <  DATE_PART(MM,CURRENT_DATE()) 
                 THEN TO_DATE('2024' ||'-'||  DATE_PART(mm,POLICY.POLICY_COMMENCEMENT_DATE)  ||'-'|| DATE_PART(DD,POLICY.POLICY_COMMENCEMENT_DATE))         
         ELSE TO_DATE('2023' ||'-'||  DATE_PART(mm,POLICY.POLICY_COMMENCEMENT_DATE)  ||'-'|| DATE_PART(DD,POLICY.POLICY_COMMENCEMENT_DATE))
        END AS NEXT_ANNIVERSARY
    --,BEN_REL_CHILD.BPB_RELATED_BEN_ID    AS CONNENTED_IBN_POL_BEN_ID
    --,BEN_REL_CHILD.BPB_RELATION_TYPE     AS CONNECTED_RELATIONSHIP_TYPE
    --,BEN_REL_PARENT.PPB_POL_BEN_ID       AS CONNENTED_IBN_POL_BEN_ID_P
    --,BEN_REL_PARENT.BPB_RELATION_TYPE     AS CONNECTED_RELATIONSHIP_TYPE_P
    --,COALESCE(BEN_REL_CHILD.BPB_RELATION_TYPE,BEN_REL_PARENT.BPB_RELATION_TYPE)  AS RELATION_TYPE   
    --,COALESCE(BEN_REL_CHILD.BPB_RELATED_BEN_ID,BEN_REL_PARENT.PPB_POL_BEN_ID) AS CONNECTED_BEN_ID  
    --,BEN_REL_PARENT.BPB_RELATION_TYPE
    --,BEN_REL_PARENT.PPB_POL_BEN_ID
    ,R.BENEFIT_NATURE AS RELATION_TYPE
    ,R.connected_bancs_benefit_id
    ,COVER.ANNUAL_PREMIUM   AS CURRENT_ANNUAL_PREMIUM
    ,COVER.ANNUAL_STAMP_DUTY    AS CURRENT_ANNUAL_STAMP_DUTY
    ,COVER.SUM_ASSURED AS CURRENT_BENEFIT_SUM_ASSURED   
    ,CAST(COVER.BENEFIT_EXPIRY_DATE AS DATE) AS BENEFIT_EXPIRY_DATE
    ,PRODUCT_CD
    ,policy.bancs_policy_id
    ,CASE WHEN COVER.BENEFIT_STATUS_CD  IN ('PHI','INF','RLSP','PHII')  THEN NULL ELSE CAST(GREATEST("COVER".BENEFIT_STATUS_CHANGE_DATE,"COVER".BENEFIT_EFFECTIVE_DATE) AS DATE) END AS BENEFIT_CANCELLATION_DATE
FROM SEM.POLICY "POLICY"
JOIN SEM.POLICY_COVER "COVER"
    ON POLICY.BANCS_POLICY_ID = COVER.BANCS_POLICY_ID
/*LEFT JOIN VAULT.V_TA_POA_BEN_RELATION "BEN_REL_CHILD"
    ON COVER.BANCS_BENEFIT_ID = BEN_REL_CHILD.PPB_POL_BEN_ID
LEFT JOIN VAULT.V_TA_POA_BEN_RELATION "BEN_REL_PARENT"
    ON COVER.BANCS_BENEFIT_ID = BEN_REL_PARENT.BPB_RELATED_BEN_ID*/
LEFT JOIN SEM.POLICY_BENEFIT_RELATIONSHIP R ON COVER.BANCS_BENEFIT_ID = R.BANCS_BENEFIT_ID


,stampduty as (
SELECT 
distinct
POP_POL_ID AS BANCS_POLICY_ID
       ,FET_BEN_FTR_ID
       ,FET_LEVEL_ID AS BANCS_BENEFIT_ID
       ,FET_EFFECTIVE_START_DT AS SD_EFF_START_DATE
       ,FET_EFFETIVE_END_DT AS SD_EFF_END_DATE
       ,FET_COL_2  AS STAMP_DUTY_AMOUNT
       ,FET_COL_5 AS SD_STATE
       ,FET_COL_1
       ,FET_COL_3 AS SD_RATE_GUESS
       ,FET_COL_4
       ,benefit_instance_number
       ,CAST(benefit_commencement_date AS DATE) AS benefit_commencement_date
       ,CAST(POLICY_COMMENCEMENT_DATE AS DATE) AS POLICY_COMMENCEMENT_DATE
       ,DIM_DATE.DATE AS POLICY_ANNIVERSARY_DATE
    FROM VAULT.V_TA_POA_BEN_FEATURE_ACTIVE V
    JOIN SEM.POLICY_COVER PC ON PC.BANCS_BENEFIT_ID = V.FET_LEVEL_ID
    JOIN SEM.POLICY P ON P.BANCS_POLICY_ID = PC.BANCS_POLICY_ID
    INNER JOIN SEM.DIM_DATE 
    ON ((DATE_PART(DD,POLICY_COMMENCEMENT_DATE) = DATE_PART(DD,DIM_DATE.DATE) 
            AND DATE_PART(MM,POLICY_COMMENCEMENT_DATE)  = DATE_PART(MM,DIM_DATE.DATE)  
            AND DIM_DATE.YEAR  >= DATE_PART(YEAR,POLICY_COMMENCEMENT_DATE)
        AND DIM_DATE.DATE < CURRENT_DATE)
        )
    WHERE FET_DELETED_FLG = 'N'
        AND FET_REC_END_DATE = TO_DATE('01-01-9999', 'DD-MM-YYYY')
        AND FET_LEVEL_CD = 'BFT' 
        AND FET_FTR_CD = 'Stamp_Duty'
        AND FET_EFFETIVE_END_DT NOT IN ('0001-01-02','0001-01-01') -- FILTER OUT NOT USED RECDS
        AND DIM_DATE.DATE >= FET_EFFECTIVE_START_DT
        AND DIM_DATE.DATE < FET_EFFETIVE_END_DT
)

,change_at_point as(
 SELECT DISTINCT 
            BANCS_POLICY_ID
            ,BANCS_BENEFIT_ID
            ,LEGACY_POLICY_NUMBER
            ,effective_from_date as change_effective_from_date
        FROM SEM.BANCS_EFF_HIST_BENEFIT_SUM_ASSURED

UNION DISTINCT

SELECT DISTINCT
        BANCS_POLICY_ID
        ,BANCS_BENEFIT_ID
        ,LEGACY_POLICY_NUMBER
        ,effective_from_date as change_effective_from_date
        FROM SEM.BANCS_EFF_HIST_BENEFIT_PREMIUM

)

--select top 100 * from SEM.POLICY_BENEFIT_RELATIONSHIP

SELECT distinct DATA.* 
    --,DIM_DATE.DATE AS POLICY_ANNIVERSARY_DATE
    ,CAST(PREM_HIST.EFFECTIVE_FROM_DATE AS DATE) AS PREMIUM_EFFECTIVE_FROM_DATE
    ,CAST(PREM_HIST.EFFECTIVE_TO_DATE AS DATE) AS PREMIUM_EFFECTIVE_TO_DATE
    ,CAST (change_effective_from_date AS DATE) AS change_effective_from_date
    ,CASE WHEN PREM_HIST.EFFECTIVE_TO_DATE = '9999-12-01' THEN CURRENT_ANNUAL_PREMIUM ELSE PREM_HIST.BENEFIT_PREMIUM_AMOUNT END AS TOTAL_PREMIUM_AMOUNT_CHANGED
  --  ,PREM_HIST.PREMIUM_AMOUNT_CHANGED
    ,CASE WHEN PREM_HIST.EFFECTIVE_TO_DATE = '9999-12-01' THEN CURRENT_BENEFIT_SUM_ASSURED  ELSE SA_HIST.BENEFIT_SUM_ASSURED_AMOUNT END AS TOTAL_SUM_ASSURED
    ,SD_EFF_START_DATE
    ,SD_EFF_END_DATE
    ,STAMP_DUTY_AMOUNT
    
FROM DATA
JOIN SEM.BANCS_EFF_HIST_BENEFIT_PREMIUM "PREM_HIST"
    ON DATA.IBN_POL_BEN_ID = PREM_HIST.BANCS_BENEFIT_ID
LEFT JOIN SEM.BANCS_EFF_HIST_BENEFIT_SUM_ASSURED "SA_HIST"
    ON DATA.IBN_POL_BEN_ID = SA_HIST.BANCS_BENEFIT_ID
    --AND PREM_HIST.EFFECTIVE_FROM_DATE >= SA_HIST.EFFECTIVE_FROM_DATE
    --AND PREM_HIST.EFFECTIVE_FROM_DATE < SA_HIST.EFFECTIVE_TO_DATE
INNER JOIN SEM.DIM_DATE 
    ON ((DATE_PART(DD,DATA.POLICY_COMMENCEMENT_DATE) = DATE_PART(DD,DIM_DATE.DATE) 
            AND DATE_PART(MM,DATA.POLICY_COMMENCEMENT_DATE)  = DATE_PART(MM,DIM_DATE.DATE)  
            --AND DIM_DATE.YEAR IN (2020,2021,2022,2023,2024) ----comment this out and use below if u want since policy went live
            AND DIM_DATE.YEAR  >= DATE_PART(YEAR,DATA.POLICY_COMMENCEMENT_DATE)
        AND DIM_DATE.DATE < CURRENT_DATE)
        --TO CATER FOR LAPSED /EXPIRED BENEFITS
        AND CASE WHEN DATA.POLICY_STATUS_CD IN ('PHI','INF','RLSP','PHII') AND DATA.BENEFIT_STATUS_CD  IN ('PHI','INF','RLSP','PHII') 
            THEN 1 = 1
            ELSE DATEADD(YEAR,0,DATA.BENEFIT_STATUS_CHANGE_DATE) >= DIM_DATE.DATE END -----> +1 TO CATER FOR CANCELLATION 1/2 WAY THROUGH THE YEAR
        )
--LEFT JOIN stampduty s on s.BANCS_BENEFIT_ID = DATA.IBN_POL_BEN_ID and s.POLICY_ANNIVERSARY_DATE = DIM_DATE.DATE
LEFT JOIN change_at_point C ON C.BANCS_BENEFIT_ID = DATA.IBN_POL_BEN_ID
LEFT JOIN stampduty s on s.BANCS_BENEFIT_ID = C.BANCS_BENEFIT_ID 
and c.change_effective_from_date >= S.SD_EFF_START_DATE
AND c.change_effective_from_date < S.SD_EFF_END_DATE


WHERE 1=1
--AND DIM_DATE.DATE >= PREM_HIST.EFFECTIVE_FROM_DATE
--AND DIM_DATE.DATE < PREM_HIST.EFFECTIVE_TO_DATE
AND c.change_effective_from_date >= SA_HIST.EFFECTIVE_FROM_DATE
AND c.change_effective_from_date < SA_HIST.EFFECTIVE_TO_DATE
AND c.change_effective_from_date >= PREM_HIST.EFFECTIVE_FROM_DATE
AND c.change_effective_from_date < PREM_HIST.EFFECTIVE_TO_DATE
ORDER BY POLICY_NO, BENEFIT_CODE, BENEFIT_INS_NO,change_effective_from_date--,DIM_DATE.DATE
